<?php

function newsletter2go_get_client($key = NULL, $api_lang = NULL, $debug = NULL) {
  static $client;

  if(!empty($client)) {
    return $client;
  }

  $library = libraries_load("newsletter2go");

  if (empty($library['loaded'])) {
      $args = array(
        '%library' => 'Newsletter2Go',
        '!error_message' => $library['error message'],
      );
      drupal_set_message(t("Problem loading %library library: !error_message", $args), 'error', TRUE);
      return FALSE;
  }

  if(is_null($key)) {
    $key = variable_get('newsletter2go_key', '');
    if(empty($key)) {
      drupal_set_message(t("In order to use the Newsletter2Go API the variable 'newsletter2go_key' must be set included in settings.php's \$conf array. See newsletter2go module's README.txt for more info."), 'error', TRUE);
      return FALSE;
    }
  }

  if(is_null($api_lang)) {
    $lang = variable_get('newsletter2go_api_lang', "de");
  }

  if(is_null($debug)) {
    $debug = variable_get('newsletter2go_debug', 0);
    if($debug) {
      drupal_set_message(t("Newsletter2Go debug logging to: ". sys_get_temp_dir() ."/n2g.debug"), 'status', FALSE);
    }
  }

  $client = new newsletter2go($key, $lang, $debug);
  return $client;
}

/**
 * Implements hook_requirements()
 */
function newsletter2go_requirements($phase) {
  $requirements = array();
  if ($phase == 'runtime') {
    $t = get_t();
    if ($path = libraries_get_path('newsletter2go')) {
      if (file_exists($path . '/newsletter2go.class.php')) {
        $requirements['newsletter2go'] = array(
          'title' => $t('Newsletter2Go'),
          'value' => $t('newsletter2go.class.php found under !path', array('!path' => $path . '/newsletter2go.class.php')),
          'severity' => REQUIREMENT_OK,
        );
        return $requirements;
      }
    }
    $requirements['newsletter2go'] = array(
      'title' => $t('Newsletter2Go'),
      'value' => $t('newsletter2go.class.php library was not found. !download the library and place in under sites/all/libraries/newsletter2go, so that the library can be found at sites/all/libraries/newsletter2go/newsletter2go.class.php.', array('!download' => l(t('Download'), 'http://www.newsletter2go.de/'))),
      'severity' => REQUIREMENT_ERROR,
    );
  }
  return $requirements;
}

/**
 * Implements hook_libraries_info().
 */
function newsletter2go_libraries_info() {
  $libraries = array();
  $libraries['newsletter2go'] = array(
    'name' => 'newsletter2go',
    'files' => array(
      'php' => array(
        'newsletter2go.class.php',
      ),
    ),
    'version callback' => 'newsletter2go_version_callback',
  );
  return $libraries;
}


function newsletter2go_version_callback() {
  return TRUE;
}

function newsletter2go_send_newsletter($newsletter_id) {
  $n2go = newsletter2go_get_client();
  $params = array(
    'id' => (int) $newsletter_id,
  );
  $response = $n2go->sendNL($params);
  if(!empty($response['status']) && $response['status'] == 200) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

function newsletter2go_get_newsletter($newsletter_id) {
  $n2go = newsletter2go_get_client();
  $params = array(
    'id' => (int) $newsletter_id,
  );
  return($n2go->getNewsletter($params));
}

function newsletter2go_get_newsletter_statistics($newsletter_id) {
  $n2go = newsletter2go_get_client();
  $params = array(
    'id' => (int) $newsletter_id,
  );
  return($n2go->getStatistics($params));
}

function newsletter2go_create_newsletter($newsletter_name, $subject, $html, $from, $text = '', $reply = NULL, $reference = NULL) {

  $reply = empty($reply) ? $from : $reply;
  $reference = empty($reference) ? 'drupal:'. time() : $reference;

  $n2go = newsletter2go_get_client();
  $params = array(
    'name' => $newsletter_name,
    'type' => 'email',
    'subject' => $subject,
    'html' => $html,
    'text' => $text,
    'from' => $from,
    'reply' => $reply,
    'reference' => $reference,
  );
  return($n2go->createNL($params));
}
